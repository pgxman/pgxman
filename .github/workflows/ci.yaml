name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run build
        run: |
          make build
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run tests
        run: |
          make test
  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run vet
        run: |
          make vet
  e2etest:
    name: E2Etest
    needs: [build, test, vet]
    runs-on: ubuntu-latest
    env:
      DEBIAN_BOOKWORM_IMAGE: localhost:5000/pgxman/builder/debian/bookworm:dev
      UBUNTU_JAMMY_IMAGE: localhost:5000/pgxman/builder/ubuntu/jammy:dev
      RUNNER_POSTGRES_15_IMAGE: localhost:5000/pgxman/runner/postgres/15:dev
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Build and push to local registry
        uses: docker/bake-action@v5
        with:
          push: true
          pull: true
          files: |
            dockerfiles/docker-bake.hcl
          targets: |
            builder-debian-bookworm
            builder-ubuntu-jammy
            runner-postgres-15
          set: |
            *.platform=linux/amd64
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            builder-debian-bookworm.tags=${{ env.DEBIAN_BOOKWORM_IMAGE }}
            builder-ubuntu-jammy.tags=${{ env.UBUNTU_JAMMY_IMAGE }}
            runner-postgres-15.tags=${{ env.RUNNER_POSTGRES_15_IMAGE }}
      - name: Run e2etest
        run: |
          make e2etest
  linux_install_test:
    name: Linux Install Test
    needs: [build, test, vet]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pg 15
        run: |
          sudo ./script/install-pg-linux 15
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run tests
        run: |
          make tools goreleaser

          # pack install test
          cat <<EOS > /tmp/pgxman.yaml
          apiVersion: v1
          postgres:
            version: "15"
          extensions:
            - name: pgvector
            - name: postgis
            - name: parquet_s3_fdw
          EOS
          PGXMAN_INSTALLER_DEBIAN_PACKAGE_DIR=$(pwd)/dist ./install.sh /tmp/pgxman.yaml

          # install test
          sudo pgxman install pg_ivm pg_bm25 --debug

          # container install test
          RUNNER_TARGET=runner-postgres-15 RUNNER_POSTGRES_15_IMAGE=ghcr.io/pgxman/runner/postgres/15:dev make docker_load_runner
          pgxman container install pgvector postgis parquet_s3_fdw --debug --runner-image ghcr.io/pgxman/runner/postgres/15:dev
  mac_install_test:
    name: Mac Install Test
    needs: [build, test, vet]
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run tests
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ github.token }}
          HOMEBREW_GITHUB_PACKAGES_TOKEN: ${{ github.token }}
          HOMEBREW_GITHUB_PACKAGES_USER: ${{ github.actor }}
          HOMEBREW_NO_AUTO_UPDATE: 1
        run: |
          GORELEASER_GITHUB_RELEASE_DOWNLOAD_URL=file://$(pwd)/dist make tools goreleaser
          PGXMAN_INSTALLER_HOMEBREW_TAP=./dist/homebrew/Formula/pgxman.rb ./install.sh
  docker:
    name: Docker
    needs: [e2etest]
    uses: ./.github/workflows/docker.yaml
    secrets: inherit
