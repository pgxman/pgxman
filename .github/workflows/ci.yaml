name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run build
        run: |
          make build
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run tests
        run: |
          make test
  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run vet
        run: |
          make vet
  e2etest:
    name: E2Etest
    needs: [build, test, vet]
    runs-on: ubuntu-latest
    env:
      DEBIAN_BOOKWORM_IMAGE: localhost:5000/pgxman/builder/debian/bookworm:dev
      UBUNTU_JAMMY_IMAGE: localhost:5000/pgxman/builder/ubuntu/jammy:dev
      RUNNER_POSTGRES_15_IMAGE: localhost:5000/pgxman/runner/postgres/15:dev
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Build and push to local registry
        uses: docker/bake-action@v4
        with:
          push: true
          pull: true
          files: |
            dockerfiles/docker-bake.hcl
          targets: |
            builder-debian-bookworm
            builder-ubuntu-jammy
            runner-postgres-15
          set: |
            *.platform=linux/amd64
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            builder-debian-bookworm.tags=${{ env.DEBIAN_BOOKWORM_IMAGE }}
            builder-ubuntu-jammy.tags=${{ env.UBUNTU_JAMMY_IMAGE }}
            runner-postgres-15.tags=${{ env.RUNNER_POSTGRES_15_IMAGE }}
      - name: Run e2etest
        run: |
          make e2etest
  installer_test:
    name: Installer Test
    needs: [build, test, vet]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run tests
        run: |
          make tools installer_test
  linux_install_test:
    name: Linux Install Test
    needs: [build, test, vet]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run tests
        run: |
          sudo apt update
          sudo apt install gnupg2 postgresql-common -y
          sudo sh /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -y
          sudo apt install postgresql-15 -y

          make build
          bin/pgxman doctor
          sudo bin/pgxman install pgvector postgis parquet_s3_fdw --yes --debug
  mac_install_test:
    name: Mac Install Test
    needs: [build, test, vet]
    runs-on: macos-13
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run tests
        run: |
          brew install --overwrite python@3.12 docker docker-compose docker-buildx colima
          mkdir -p ~/.docker/cli-plugins
          ln -sfn "$(brew --prefix docker-compose)/bin/docker-compose" ~/.docker/cli-plugins/docker-compose
          ln -sfn "$(brew --prefix docker-buildx)/bin/docker-buildx" ~/.docker/cli-plugins/docker-buildx
          colima start

          GORELEASER_GITHUB_RELEASE_DOWNLOAD_URL=file://$(PWD)/dist make tools goreleaser docker_load_runner
          cat <<EOS > /tmp/pgxman.yaml
          apiVersion: v1
          postgres:
            version: "15"
          extensions:
            - name: pgvector
            - name: postgis
            - name: parquet_s3_fdw
          EOS
          PGXMAN_INSTALLER_HOMEBREW_TAP=$(PWD)/dist/homebrew/Formula/pgxman.rb ./install.sh /tmp/pgxman.yaml
  docker:
    name: Docker
    needs: [e2etest, installer_test]
    uses: ./.github/workflows/docker.yaml
    secrets: inherit
